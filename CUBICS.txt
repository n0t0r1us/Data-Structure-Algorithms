#include <iostream>
#include <vector>
#include <map>
using namespace std;

typedef long long ll;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    int n;
    ll k;
    cin >> n >> k;
    vector<ll> a(n+1), pref(n+1);
    for (int i = 1; i <= n; i++) {
        cin >> a[i];
        pref[i] = pref[i-1] + a[i];
    }
    map<ll, int> first;
    int bestLen = 0, bestPos = 0;
    for (int j = 0; j <= n; j++) {
        ll val = pref[j] - (ll)j * k;
        if (first.find(val) == first.end()) {
            first[val] = j;
        } else {
            int len = j - first[val];
            int pos = first[val] + 1;
            if (len > bestLen || (len == bestLen && (bestPos == 0 || pos < bestPos))) {
                bestLen = len;
                bestPos = pos;
            }
        }
    }
    if (bestLen == 0) cout << 0;
    else cout << bestLen << " " << bestPos;
    return 0;
}
