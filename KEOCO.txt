#include <iostream>
#include <vector>
#include <cstring>
#include <cstdlib>
using namespace std;

const int MAXN = 101;
const int MAXS = 500 * 100 + 1;

bool dp[MAXN][MAXS];

int main() {
    int n;
    cin >> n;
    vector<int> w(n);
    int total = 0;

    for (int i = 0; i < n; ++i) {
        cin >> w[i];
        total += w[i];
    }

    memset(dp, 0, sizeof(dp));
    dp[0][0] = true;

    for (int i = 0; i < n; ++i) {
        for (int cnt = n / 2; cnt >= 0; --cnt) {
            for (int sum = total; sum >= w[i]; --sum) {
                if (dp[cnt][sum - w[i]])
                    dp[cnt + 1][sum] = true;
            }
        }
    }

    int best = total;
    int resA = 0, resB = total;

    for (int cnt = n / 2; cnt <= (n + 1) / 2; ++cnt) {
        for (int sum = 0; sum <= total; ++sum) {
            if (dp[cnt][sum]) {
                int other = total - sum;
                if (abs(other - sum) < abs(resA - resB)) {
                    resA = min(sum, other);
                    resB = max(sum, other);
                }
            }
        }
    }

    cout << resA << " " << resB << endl;
    return 0;
}
