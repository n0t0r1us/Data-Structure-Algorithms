#include <iostream>
#include <iomanip>
using namespace std;

const int MAX = 8;
int n, board[MAX][MAX];
int dx[8] = { 2, 1, -1, -2, -2, -1, 1, 2 };
int dy[8] = { 1, 2, 2, 1, -1, -2, -2, -1 };

bool isSafe(int x, int y) {
    return (x >= 0 && x < n && y >= 0 && y < n && board[x][y] == -1);
}

void printBoard() {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++)
            cout << setw(2) << board[i][j] << " ";
        cout << endl;
    }
    cout << endl;
}

bool solve(int x, int y, int moveNum) {
    if (moveNum == n * n) return true;

    for (int i = 0; i < 8; i++) {
        int nx = x + dx[i];
        int ny = y + dy[i];
        if (isSafe(nx, ny)) {
            board[nx][ny] = moveNum;
            if (solve(nx, ny, moveNum + 1)) return true;
            board[nx][ny] = -1; // backtrack
        }
    }
    return false;
}

int main() {
    int sx, sy;
    cin >> n >> sx >> sy; // nh?p kích thu?c bàn c? và v? trí xu?t phát (0-based)

    // kh?i t?o bàn c?
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            board[i][j] = -1;

    board[sx][sy] = 0;

    if (solve(sx, sy, 1))
        printBoard();
    else
        cout << "No solution found.\n";

    return 0;
}
