#include <cstdio>

int N;
int a[15];
int gcd(int x, int y) {
    while (y != 0) {
        int t = y;
        y = x % y;
        x = t;
    }
    return x;
}

int dp[1<<15][15];
bool done[1<<15][15];

int max(int x, int y) {
    return x > y ? x : y;
}

int solve(int mask, int last) {
    if (mask == (1<<N) - 1) return 0;
    if (done[mask][last]) return dp[mask][last];
    done[mask][last] = true;

    int res = 0;
    for (int i = 0; i < N; i++) {
        if ((mask & (1 << i)) == 0) {
            int val = gcd(a[last], a[i]) + solve(mask | (1 << i), i);
            if (val > res) res = val;
        }
    }
    dp[mask][last] = res;
    return res;
}

int main() {
    std::scanf("%d", &N);
    for (int i = 0; i < N; i++) std::scanf("%d", &a[i]);

    // Không reset done và dp nhiều lần
    for (int i = 0; i < (1 << N); i++)
        for (int j = 0; j < N; j++)
            done[i][j] = false;

    int ans = 0;
    for (int i = 0; i < N; i++) {
        int val = solve(1 << i, i);
        if (val > ans) ans = val;
    }

    std::printf("%d\n", ans);
    return 0;
}
