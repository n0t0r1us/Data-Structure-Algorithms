#include <iostream>
#include <stack>
#include <string>
#include <cctype> // isdigit
using namespace std;

int uuTien(char op) {
    if (op == '*') return 2;
    if (op == '+' || op == '-') return 1;
    return 0;
}

int tinh(int a, int b, char op) {
    if (op == '+') return a + b;
    if (op == '-') return a - b;
    if (op == '*') return a * b;
    return 0;
}

void xuLy(stack<int>& st_val, stack<char>& st_op) {
    int b = st_val.top(); st_val.pop();
    int a = st_val.top(); st_val.pop();
    char op = st_op.top(); st_op.pop();
    int kq = tinh(a, b, op);
    st_val.push(kq);
}

int main() {
    string expr;
    cin >> expr;

    stack<int> st_val;
    stack<char> st_op;

    for (int i = 0; i < expr.length(); ++i) {
        char ch = expr[i];

        if (isdigit(ch)) {
            int num = 0;
            while (i < expr.length() && isdigit(expr[i])) {
                num = num * 10 + (expr[i] - '0');
                i++;
            }
            i--; // vì vòng for sẽ tăng i thêm 1 lần nữa
            st_val.push(num);
        }
        else if (ch == '(') {
            st_op.push(ch);
        }
        else if (ch == ')') {
            while (!st_op.empty() && st_op.top() != '(') {
                xuLy(st_val, st_op);
            }
            if (!st_op.empty()) st_op.pop(); // bỏ '('
        }
        else if (ch == '+' || ch == '-' || ch == '*') {
            while (!st_op.empty() && uuTien(st_op.top()) >= uuTien(ch)) {
                xuLy(st_val, st_op);
            }
            st_op.push(ch);
        }
    }

    while (!st_op.empty()) {
        xuLy(st_val, st_op);
    }

    cout << st_val.top() << endl;

    return 0;
}
