#include <bits/stdc++.h>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int T;
    cin >> T;
    while (T--) {
        int N;
        long long L;
        cin >> N >> L;
        string s;
        cin >> s;
        map<string, long long> seen;
        vector<string> states;
        seen[s] = 0;
        states.push_back(s);

        long long step = 0;
        long long cycle_start = -1, cycle_len = -1;

        while (step < L) {
            string next = s;
            for (int i = 0; i < N; i++) {
                bool leftSit = (i == 0) || (s[i-1] == 's');
                bool rightSit = (i == N-1) || (s[i+1] == 's');
                if (leftSit && rightSit) next[i] = 's';
                else next[i] = 'S';
            }
            step++;
            s.swap(next);

            if (seen.count(s)) {
                cycle_start = seen[s];
                cycle_len = step - cycle_start;
                break;
            } else {
                seen[s] = step;
                states.push_back(s);
            }
        }

        if (cycle_len != -1 && step < L) {
            long long remain = (L - cycle_start) % cycle_len;
            s = states[cycle_start + remain];
        }

        cout << s << "\n";
    }
    return 0;
}
