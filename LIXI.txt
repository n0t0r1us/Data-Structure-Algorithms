#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct Bag {
    int a;
    int b;
};

bool compare_bag1(const Bag &x, const Bag &y) {
    if (x.b == y.b) {
        return x.a > y.a;
    }
    return x.b > y.b;
}

bool compare_bag2(const Bag &x, const Bag &y) {
    return x.a > y.a;
}

int main() {
    int n;
    cin >> n;
    
    vector<Bag> bag1; // b > 0
    vector<Bag> bag2; // b = 0
    
    for (int i = 0; i < n; ++i) {
        int a, b;
        cin >> a >> b;
        if (b > 0) {
            bag1.push_back({a, b});
        } else {
            bag2.push_back({a, b});
        }
    }
    
    // Sort bag1: higher b first, if same b then higher a first
    sort(bag1.begin(), bag1.end(), compare_bag1);
    // Sort bag2: higher a first
    sort(bag2.begin(), bag2.end(), compare_bag2);
    
    int total_money = 0;
    int remaining_choices = 1; // initially can choose 1 bag
    
    int i = 0, j = 0;
    while (remaining_choices > 0 && (i < bag1.size() || j < bag2.size())) {
        if (i < bag1.size()) {
            total_money += bag1[i].a;
            remaining_choices += bag1[i].b - 1;
            i++;
        } else {
            total_money += bag2[j].a;
            remaining_choices--;
            j++;
        }
    }
    
    cout << total_money << endl;
    
    return 0;
}