#include <iostream>
#include <vector>
#include <string>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    long long t;
    int m;
    if (!(cin >> t >> m)) return 0;

    long long integer_part = t / m;
    int rem = (int)(t % m);

    cout << integer_part << ".";

    if (rem == 0) {
        cout << "0\n";
        return 0;
    }

    // pos[r] = vị trí (0-based) trong chuỗi digits khi số dư r xuất hiện lần đầu
    vector<int> pos(m, -1);
    string digits;
    digits.reserve(1024);

    int startRepeat = -1;
    while (rem != 0) {
        if (pos[rem] != -1) {
            startRepeat = pos[rem];
            break;
        }
        pos[rem] = (int)digits.size();
        rem *= 10;
        int d = rem / m;
        digits.push_back(char('0' + d));
        rem = rem % m;
    }

    if (startRepeat == -1) {
        // hữu hạn
        cout << digits << "\n";
    } else {
        // có vòng lặp từ startRepeat tới end
        for (int i = 0; i < startRepeat; ++i) cout << digits[i];
        cout << "(";
        for (size_t i = startRepeat; i < digits.size(); ++i) cout << digits[i];
        cout << ")\n";
    }

    return 0;
}
