#include <iostream>
#include <vector>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    int N;
    if (!(cin >> N)) return 0;
    vector<int> A(N);
    int maxA = 0;
    for (int i = 0; i < N; ++i) {
        cin >> A[i];
        if (A[i] > maxA) maxA = A[i];
    }

    // SPF sieve up to maxA
    if (maxA < 2) maxA = 2;
    vector<int> spf(maxA + 1, 0);
    for (int i = 2; i <= maxA; ++i) {
        if (spf[i] == 0) {
            spf[i] = i;
            if ((long long)i * i <= maxA) {
                for (int j = i * i; j <= maxA; j += i) {
                    if (spf[j] == 0) spf[j] = i;
                }
            }
        }
    }

    int xorsum = 0;
    for (int i = 0; i < N; ++i) {
        int v = A[i];
        int om = 0;
        while (v > 1) {
            int p = spf[v];
            if (p == 0) p = v; // for safety
            while (v % p == 0) {
                v /= p;
                ++om;
            }
        }
        xorsum ^= om;
    }

    if (xorsum != 0) cout << "ALICE\n";
    else cout << "BOB\n";

    return 0;
}
